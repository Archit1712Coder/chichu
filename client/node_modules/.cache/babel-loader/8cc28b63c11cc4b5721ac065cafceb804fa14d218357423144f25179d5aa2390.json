{"ast":null,"code":"var _jsxFileName = \"/Users/architkumar/Documents/excel-dashboard/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Box, Button, TextField, CircularProgress, Table, TableHead, TableRow, TableCell, TableBody, Typography, Paper, Snackbar, IconButton, TableSortLabel, Modal, TablePagination } from \"@mui/material\";\nimport { styled } from \"@mui/system\";\nimport CloseIcon from '@mui/icons-material/Close';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledTableCell = styled(TableCell)(({\n  theme\n}) => ({\n  fontWeight: 'bold',\n  backgroundColor: '#f5f5f5'\n}));\n_c = StyledTableCell;\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [data, setData] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [uploading, setUploading] = useState(false);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const [sortOrder, setSortOrder] = useState(\"asc\");\n  const [sortBy, setSortBy] = useState(\"clientname\");\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedClient, setSelectedClient] = useState(null);\n  useEffect(() => {\n    fetchData();\n  }, [search]);\n  const fetchData = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(`http://localhost:3000/data?search=${search}`);\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok \" + response.statusText);\n      }\n      const result = await response.json();\n      setData(result);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n    setLoading(false);\n  };\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!file) {\n      alert(\"Please select a file to upload\");\n      return;\n    }\n    setUploading(true);\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const response = await fetch(\"http://localhost:3000/upload\", {\n        method: \"POST\",\n        body: formData\n      });\n      const responseData = await response.text();\n      setSnackbarMessage(\"File uploaded successfully!\");\n      fetchData();\n    } catch (error) {\n      setSnackbarMessage(\"Error uploading file\");\n    }\n    setUploading(false);\n    setSnackbarOpen(true);\n  };\n  const handleSortRequest = property => {\n    const isAsc = sortBy === property && sortOrder === \"asc\";\n    setSortOrder(isAsc ? \"desc\" : \"asc\");\n    setSortBy(property);\n  };\n  const sortedData = data => {\n    return [...data].sort((a, b) => {\n      if (a[sortBy] < b[sortBy]) return sortOrder === \"asc\" ? -1 : 1;\n      if (a[sortBy] > b[sortBy]) return sortOrder === \"asc\" ? 1 : -1;\n      return 0;\n    });\n  };\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  const handleClientClick = client => {\n    setSelectedClient(client);\n    setModalOpen(true);\n  };\n  const handleModalClose = () => {\n    setModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      my: 4,\n      textAlign: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Excel Data Upload and Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        mb: 2,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          accept: \".xlsx,.xls\",\n          type: \"file\",\n          onChange: handleFileChange,\n          style: {\n            display: \"none\"\n          },\n          id: \"file-upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file-upload\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            component: \"span\",\n            color: \"primary\",\n            disabled: uploading,\n            children: uploading ? \"Uploading...\" : \"Choose File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: handleUpload,\n          disabled: !file || uploading,\n          style: {\n            marginLeft: \"10px\"\n          },\n          children: uploading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 26\n          }, this) : \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        mb: 4,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Search by Client Name\",\n          variant: \"outlined\",\n          value: search,\n          onChange: e => setSearch(e.target.value),\n          fullWidth: true,\n          style: {\n            maxWidth: 400\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        children: [/*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                  active: sortBy === \"SNo\",\n                  direction: sortOrder,\n                  onClick: () => handleSortRequest(\"SNo\"),\n                  children: \"SNo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                children: \"Material\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                children: \"Unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                children: \"Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                children: \"Rate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                  active: sortBy === \"clientname\",\n                  direction: sortOrder,\n                  onClick: () => handleSortRequest(\"clientname\"),\n                  children: \"Client Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: sortedData(data).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((item, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: item.SNo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: item.Material\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: item.Unit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: item.Quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: item.Rate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: item.Amount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                style: {\n                  cursor: \"pointer\",\n                  color: \"blue\"\n                },\n                onClick: () => handleClientClick(item),\n                children: item.clientname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n          rowsPerPageOptions: [5, 10, 25],\n          component: \"div\",\n          count: data.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onPageChange: handlePageChange,\n          onRowsPerPageChange: handleRowsPerPageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: snackbarOpen,\n        autoHideDuration: 6000,\n        onClose: () => setSnackbarOpen(false),\n        message: snackbarMessage,\n        action: /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          \"aria-label\": \"close\",\n          color: \"inherit\",\n          onClick: () => setSnackbarOpen(false),\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), selectedClient && /*#__PURE__*/_jsxDEV(Modal, {\n        open: modalOpen,\n        onClose: handleModalClose,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          style: {\n            position: \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n            backgroundColor: \"white\",\n            padding: \"20px\",\n            borderRadius: \"8px\",\n            outline: \"none\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: [\"Client: \", selectedClient.clientname]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"Material: \", selectedClient.Material]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"Quantity: \", selectedClient.Quantity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"Rate: \", selectedClient.Rate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"Amount: \", selectedClient.Amount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GcVzJbXZKnF1jXuWy6OvQhuTs+w=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledTableCell\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","Box","Button","TextField","CircularProgress","Table","TableHead","TableRow","TableCell","TableBody","Typography","Paper","Snackbar","IconButton","TableSortLabel","Modal","TablePagination","styled","CloseIcon","jsxDEV","_jsxDEV","StyledTableCell","theme","fontWeight","backgroundColor","_c","App","_s","file","setFile","data","setData","search","setSearch","loading","setLoading","uploading","setUploading","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","sortOrder","setSortOrder","sortBy","setSortBy","page","setPage","rowsPerPage","setRowsPerPage","modalOpen","setModalOpen","selectedClient","setSelectedClient","fetchData","response","fetch","ok","Error","statusText","result","json","error","console","handleFileChange","e","target","files","handleUpload","alert","formData","FormData","append","method","body","responseData","text","handleSortRequest","property","isAsc","sortedData","sort","a","b","handlePageChange","event","newPage","handleRowsPerPageChange","parseInt","value","handleClientClick","client","handleModalClose","children","my","textAlign","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","mb","accept","type","onChange","style","id","htmlFor","component","color","disabled","onClick","marginLeft","size","label","fullWidth","maxWidth","elevation","active","direction","slice","map","item","index","SNo","Material","Unit","Quantity","Rate","Amount","cursor","clientname","rowsPerPageOptions","count","length","onPageChange","onRowsPerPageChange","open","autoHideDuration","onClose","message","action","fontSize","alignItems","position","top","left","transform","padding","borderRadius","outline","_c2","$RefreshReg$"],"sources":["/Users/architkumar/Documents/excel-dashboard/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Container, Box, Button, TextField, CircularProgress, Table, TableHead,\n  TableRow, TableCell, TableBody, Typography, Paper, Snackbar, IconButton,\n  TableSortLabel, Modal, TablePagination\n} from \"@mui/material\";\nimport { styled } from \"@mui/system\";\nimport CloseIcon from '@mui/icons-material/Close';\nimport \"./App.css\";\n\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  fontWeight: 'bold',\n  backgroundColor: '#f5f5f5',\n}));\n\nfunction App() {\n  const [file, setFile] = useState(null);\n  const [data, setData] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [uploading, setUploading] = useState(false);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const [sortOrder, setSortOrder] = useState(\"asc\");\n  const [sortBy, setSortBy] = useState(\"clientname\");\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedClient, setSelectedClient] = useState(null);\n\n  useEffect(() => {\n    fetchData();\n  }, [search]);\n\n  const fetchData = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(`http://localhost:3000/data?search=${search}`);\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok \" + response.statusText);\n      }\n      const result = await response.json();\n      setData(result);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n    setLoading(false);\n  };\n\n  const handleFileChange = (e) => {\n    setFile(e.target.files[0]);\n  };\n\n  const handleUpload = async () => {\n    if (!file) {\n      alert(\"Please select a file to upload\");\n      return;\n    }\n    setUploading(true);\n    const formData = new FormData();\n    formData.append(\"file\", file);\n\n    try {\n      const response = await fetch(\"http://localhost:3000/upload\", {\n        method: \"POST\",\n        body: formData,\n      });\n      const responseData = await response.text();\n      setSnackbarMessage(\"File uploaded successfully!\");\n      fetchData();\n    } catch (error) {\n      setSnackbarMessage(\"Error uploading file\");\n    }\n    setUploading(false);\n    setSnackbarOpen(true);\n  };\n\n  const handleSortRequest = (property) => {\n    const isAsc = sortBy === property && sortOrder === \"asc\";\n    setSortOrder(isAsc ? \"desc\" : \"asc\");\n    setSortBy(property);\n  };\n\n  const sortedData = (data) => {\n    return [...data].sort((a, b) => {\n      if (a[sortBy] < b[sortBy]) return sortOrder === \"asc\" ? -1 : 1;\n      if (a[sortBy] > b[sortBy]) return sortOrder === \"asc\" ? 1 : -1;\n      return 0;\n    });\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleRowsPerPageChange = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleClientClick = (client) => {\n    setSelectedClient(client);\n    setModalOpen(true);\n  };\n\n  const handleModalClose = () => {\n    setModalOpen(false);\n  };\n\n  return (\n    <Container>\n      <Box my={4} textAlign=\"center\">\n        <Typography variant=\"h4\" gutterBottom>\n          Excel Data Upload and Dashboard\n        </Typography>\n\n        {/* File Upload */}\n        <Box display=\"flex\" justifyContent=\"center\" mb={2}>\n          <input\n            accept=\".xlsx,.xls\"\n            type=\"file\"\n            onChange={handleFileChange}\n            style={{ display: \"none\" }}\n            id=\"file-upload\"\n          />\n          <label htmlFor=\"file-upload\">\n            <Button variant=\"contained\" component=\"span\" color=\"primary\" disabled={uploading}>\n              {uploading ? \"Uploading...\" : \"Choose File\"}\n            </Button>\n          </label>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={handleUpload}\n            disabled={!file || uploading}\n            style={{ marginLeft: \"10px\" }}\n          >\n            {uploading ? <CircularProgress size={24} /> : \"Upload\"}\n          </Button>\n        </Box>\n\n        {/* Search Bar */}\n        <Box display=\"flex\" justifyContent=\"center\" mb={4}>\n          <TextField\n            label=\"Search by Client Name\"\n            variant=\"outlined\"\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n            fullWidth\n            style={{ maxWidth: 400 }}\n          />\n        </Box>\n\n        {/* Data Table */}\n        {loading ? (\n          <Box display=\"flex\" justifyContent=\"center\">\n            <CircularProgress />\n          </Box>\n        ) : (\n          <Paper elevation={3}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <StyledTableCell>\n                    <TableSortLabel\n                      active={sortBy === \"SNo\"}\n                      direction={sortOrder}\n                      onClick={() => handleSortRequest(\"SNo\")}\n                    >\n                      SNo\n                    </TableSortLabel>\n                  </StyledTableCell>\n                  <StyledTableCell>Material</StyledTableCell>\n                  <StyledTableCell>Unit</StyledTableCell>\n                  <StyledTableCell>Quantity</StyledTableCell>\n                  <StyledTableCell>Rate</StyledTableCell>\n                  <StyledTableCell>Amount</StyledTableCell>\n                  <StyledTableCell>\n                    <TableSortLabel\n                      active={sortBy === \"clientname\"}\n                      direction={sortOrder}\n                      onClick={() => handleSortRequest(\"clientname\")}\n                    >\n                      Client Name\n                    </TableSortLabel>\n                  </StyledTableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {sortedData(data)\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((item, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{item.SNo}</TableCell>\n                      <TableCell>{item.Material}</TableCell>\n                      <TableCell>{item.Unit}</TableCell>\n                      <TableCell>{item.Quantity}</TableCell>\n                      <TableCell>{item.Rate}</TableCell>\n                      <TableCell>{item.Amount}</TableCell>\n                      <TableCell\n                        style={{ cursor: \"pointer\", color: \"blue\" }}\n                        onClick={() => handleClientClick(item)}\n                      >\n                        {item.clientname}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n              </TableBody>\n            </Table>\n\n            {/* Pagination */}\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 25]}\n              component=\"div\"\n              count={data.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onPageChange={handlePageChange}\n              onRowsPerPageChange={handleRowsPerPageChange}\n            />\n          </Paper>\n        )}\n\n        {/* Snackbar for notifications */}\n        <Snackbar\n          open={snackbarOpen}\n          autoHideDuration={6000}\n          onClose={() => setSnackbarOpen(false)}\n          message={snackbarMessage}\n          action={\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={() => setSnackbarOpen(false)}>\n              <CloseIcon fontSize=\"small\" />\n            </IconButton>\n          }\n        />\n\n        {/* Modal for Client Details */}\n        {selectedClient && (\n          <Modal open={modalOpen} onClose={handleModalClose}>\n            <Box\n              display=\"flex\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              style={{\n                position: \"absolute\",\n                top: \"50%\",\n                left: \"50%\",\n                transform: \"translate(-50%, -50%)\",\n                backgroundColor: \"white\",\n                padding: \"20px\",\n                borderRadius: \"8px\",\n                outline: \"none\",\n              }}\n            >\n              <Typography variant=\"h6\">\n                Client: {selectedClient.clientname}\n              </Typography>\n              <Typography>Material: {selectedClient.Material}</Typography>\n              <Typography>Quantity: {selectedClient.Quantity}</Typography>\n              <Typography>Rate: {selectedClient.Rate}</Typography>\n              <Typography>Amount: {selectedClient.Amount}</Typography>\n            </Box>\n          </Modal>\n        )}\n      </Box>\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}