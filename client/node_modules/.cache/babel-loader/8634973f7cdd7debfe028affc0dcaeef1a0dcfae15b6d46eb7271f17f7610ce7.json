{"ast":null,"code":"var _jsxFileName = \"/Users/architkumar/Documents/excel-dashboard/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Box, Button, TextField, CircularProgress, Table, TableHead, TableRow, TableCell, TableBody, Typography, Paper, Snackbar, IconButton, TablePagination, TableContainer, Grid, Dialog, DialogTitle, DialogContent, DialogActions } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [data, setData] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [uploading, setUploading] = useState(false);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [selectedRow, setSelectedRow] = useState(null); // For updating\n\n  useEffect(() => {\n    fetchData();\n  }, [search]);\n  const fetchData = async () => {\n    setLoading(true);\n    try {\n      const encodedSearch = encodeURIComponent(search.trim());\n      const response = await fetch(`http://localhost:3000/api/files/data?search=${encodedSearch}`);\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok \" + response.statusText);\n      }\n      const result = await response.json();\n      setData(result);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n    setLoading(false);\n  };\n  const handleFileChange = e => setFile(e.target.files[0]);\n  const handleUpload = async () => {\n    if (!file) {\n      alert(\"Please select a file to upload\");\n      return;\n    }\n    setUploading(true);\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const response = await fetch(\"http://localhost:3000/api/files/upload\", {\n        method: \"POST\",\n        body: formData\n      });\n      const responseData = await response.text();\n      setSnackbarMessage(\"File uploaded successfully!\");\n      fetchData();\n    } catch (error) {\n      setSnackbarMessage(\"Error uploading file\");\n    }\n    setUploading(false);\n    setSnackbarOpen(true);\n  };\n  const handleDelete = async filename => {\n    try {\n      await fetch(`http://localhost:3000/api/files/delete/${filename}`, {\n        method: \"DELETE\"\n      });\n      setSnackbarMessage(\"File deleted successfully!\");\n      fetchData();\n    } catch (error) {\n      setSnackbarMessage(\"Error deleting file\");\n    }\n    setSnackbarOpen(true);\n  };\n  const handleUpdate = (file, row) => {\n    setSelectedRow({\n      ...row,\n      filename: file.filename\n    });\n    setEditDialogOpen(true);\n  };\n  const handleSaveUpdate = async () => {\n    const {\n      filename,\n      SNo,\n      ...updatedRow\n    } = selectedRow;\n    try {\n      await fetch(`http://localhost:3000/api/files/update/${filename}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          SNo,\n          updatedRow\n        })\n      });\n      setSnackbarMessage(\"Row updated successfully!\");\n      setEditDialogOpen(false);\n      fetchData();\n    } catch (error) {\n      setSnackbarMessage(\"Error updating row\");\n    }\n    setSnackbarOpen(true);\n  };\n  const handleChangeRow = (field, value) => {\n    setSelectedRow(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  const formatDateTime = timestamp => {\n    if (!timestamp || isNaN(new Date(timestamp).getTime())) {\n      return \"Unknown date\";\n    }\n    const date = new Date(timestamp);\n    return new Intl.DateTimeFormat(\"en-US\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n      hour: \"2-digit\",\n      minute: \"2-digit\"\n    }).format(date);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      my: 4,\n      textAlign: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Excel Data Upload and Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        mb: 2,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          accept: \".xlsx,.xls\",\n          type: \"file\",\n          onChange: handleFileChange,\n          style: {\n            display: \"none\"\n          },\n          id: \"file-upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file-upload\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            component: \"span\",\n            color: \"primary\",\n            disabled: uploading,\n            children: uploading ? \"Uploading...\" : \"Choose File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: handleUpload,\n          disabled: !file || uploading,\n          style: {\n            marginLeft: \"10px\"\n          },\n          children: uploading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 26\n          }, this) : \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        mb: 4,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Search by Filename\",\n          variant: \"outlined\",\n          value: search,\n          onChange: e => setSearch(e.target.value),\n          fullWidth: true,\n          style: {\n            maxWidth: 400\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Filename\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Date Uploaded\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: data.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n                children: \"No data available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 21\n              }, this) : data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((file, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: file.filename\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: formatDateTime(file.timestamp)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: file.data.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    spacing: 2,\n                    style: {\n                      border: \"1px solid #ddd\",\n                      marginBottom: \"10px\",\n                      padding: \"10px\",\n                      borderRadius: \"5px\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 2,\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body1\",\n                        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: \"SNo:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 237,\n                          columnNumber: 37\n                        }, this), \" \", row.SNo]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 236,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 235,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 2,\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body1\",\n                        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: \"Material:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 242,\n                          columnNumber: 37\n                        }, this), \" \", row.Material]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 241,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 240,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 2,\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body1\",\n                        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: \"Unit:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 247,\n                          columnNumber: 37\n                        }, this), \" \", row.Unit]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 246,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 245,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 2,\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body1\",\n                        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: \"Quantity:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 252,\n                          columnNumber: 37\n                        }, this), \" \", row.Quantity]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 251,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 250,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 2,\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body1\",\n                        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: \"Rate:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 257,\n                          columnNumber: 37\n                        }, this), \" \", row.Rate]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 256,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 255,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 2,\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body1\",\n                        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: \"Amount:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 262,\n                          columnNumber: 37\n                        }, this), \" \", row.Amount]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 261,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 260,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 12,\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"outlined\",\n                        color: \"primary\",\n                        onClick: () => handleUpdate(file, row),\n                        children: \"Edit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 266,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 265,\n                      columnNumber: 33\n                    }, this)]\n                  }, rowIndex, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 31\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    color: \"secondary\",\n                    onClick: () => handleDelete(file.filename),\n                    children: \"Delete File\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 27\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n          rowsPerPageOptions: [5, 10, 25],\n          component: \"div\",\n          count: data.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onPageChange: (e, newPage) => setPage(newPage),\n          onRowsPerPageChange: e => setRowsPerPage(parseInt(e.target.value, 10))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: snackbarOpen,\n        autoHideDuration: 6000,\n        onClose: () => setSnackbarOpen(false),\n        message: snackbarMessage,\n        action: /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          \"aria-label\": \"close\",\n          color: \"inherit\",\n          onClick: () => setSnackbarOpen(false),\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: editDialogOpen,\n        onClose: () => setEditDialogOpen(false),\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Edit Row\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"SNo\",\n            fullWidth: true,\n            value: (selectedRow === null || selectedRow === void 0 ? void 0 : selectedRow.SNo) || \"\",\n            onChange: e => handleChangeRow(\"SNo\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Material\",\n            fullWidth: true,\n            value: (selectedRow === null || selectedRow === void 0 ? void 0 : selectedRow.Material) || \"\",\n            onChange: e => handleChangeRow(\"Material\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Unit\",\n            fullWidth: true,\n            value: (selectedRow === null || selectedRow === void 0 ? void 0 : selectedRow.Unit) || \"\",\n            onChange: e => handleChangeRow(\"Unit\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Quantity\",\n            fullWidth: true,\n            value: (selectedRow === null || selectedRow === void 0 ? void 0 : selectedRow.Quantity) || \"\",\n            onChange: e => handleChangeRow(\"Quantity\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Rate\",\n            fullWidth: true,\n            value: (selectedRow === null || selectedRow === void 0 ? void 0 : selectedRow.Rate) || \"\",\n            onChange: e => handleChangeRow(\"Rate\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Amount\",\n            fullWidth: true,\n            value: (selectedRow === null || selectedRow === void 0 ? void 0 : selectedRow.Amount) || \"\",\n            onChange: e => handleChangeRow(\"Amount\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setEditDialogOpen(false),\n            color: \"primary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleSaveUpdate,\n            color: \"primary\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qkS8vOfNzRxPlC9ub49qG+67w5Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","Box","Button","TextField","CircularProgress","Table","TableHead","TableRow","TableCell","TableBody","Typography","Paper","Snackbar","IconButton","TablePagination","TableContainer","Grid","Dialog","DialogTitle","DialogContent","DialogActions","CloseIcon","jsxDEV","_jsxDEV","App","_s","file","setFile","data","setData","search","setSearch","loading","setLoading","uploading","setUploading","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","page","setPage","rowsPerPage","setRowsPerPage","editDialogOpen","setEditDialogOpen","selectedRow","setSelectedRow","fetchData","encodedSearch","encodeURIComponent","trim","response","fetch","ok","Error","statusText","result","json","error","console","handleFileChange","e","target","files","handleUpload","alert","formData","FormData","append","method","body","responseData","text","handleDelete","filename","handleUpdate","row","handleSaveUpdate","SNo","updatedRow","headers","JSON","stringify","handleChangeRow","field","value","prev","formatDateTime","timestamp","isNaN","Date","getTime","date","Intl","DateTimeFormat","year","month","day","hour","minute","format","children","my","textAlign","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","mb","accept","type","onChange","style","id","htmlFor","component","color","disabled","onClick","marginLeft","size","label","fullWidth","maxWidth","elevation","length","slice","map","index","rowIndex","container","spacing","border","marginBottom","padding","borderRadius","item","xs","Material","Unit","Quantity","Rate","Amount","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","open","autoHideDuration","onClose","message","action","fontSize","_c","$RefreshReg$"],"sources":["/Users/architkumar/Documents/excel-dashboard/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Box,\n  Button,\n  TextField,\n  CircularProgress,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Typography,\n  Paper,\n  Snackbar,\n  IconButton,\n  TablePagination,\n  TableContainer,\n  Grid,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport \"./App.css\";\n\nfunction App() {\n  const [file, setFile] = useState(null);\n  const [data, setData] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [uploading, setUploading] = useState(false);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [selectedRow, setSelectedRow] = useState(null); // For updating\n\n  useEffect(() => {\n    fetchData();\n  }, [search]);\n\n  const fetchData = async () => {\n    setLoading(true);\n    try {\n      const encodedSearch = encodeURIComponent(search.trim());\n      const response = await fetch(\n        `http://localhost:3000/api/files/data?search=${encodedSearch}`,\n      );\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok \" + response.statusText);\n      }\n      const result = await response.json();\n      setData(result);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n    setLoading(false);\n  };\n\n  const handleFileChange = (e) => setFile(e.target.files[0]);\n\n  const handleUpload = async () => {\n    if (!file) {\n      alert(\"Please select a file to upload\");\n      return;\n    }\n    setUploading(true);\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const response = await fetch(\"http://localhost:3000/api/files/upload\", {\n        method: \"POST\",\n        body: formData,\n      });\n      const responseData = await response.text();\n      setSnackbarMessage(\"File uploaded successfully!\");\n      fetchData();\n    } catch (error) {\n      setSnackbarMessage(\"Error uploading file\");\n    }\n    setUploading(false);\n    setSnackbarOpen(true);\n  };\n\n  const handleDelete = async (filename) => {\n    try {\n      await fetch(`http://localhost:3000/api/files/delete/${filename}`, {\n        method: \"DELETE\",\n      });\n      setSnackbarMessage(\"File deleted successfully!\");\n      fetchData();\n    } catch (error) {\n      setSnackbarMessage(\"Error deleting file\");\n    }\n    setSnackbarOpen(true);\n  };\n\n  const handleUpdate = (file, row) => {\n    setSelectedRow({ ...row, filename: file.filename });\n    setEditDialogOpen(true);\n  };\n\n  const handleSaveUpdate = async () => {\n    const { filename, SNo, ...updatedRow } = selectedRow;\n    try {\n      await fetch(`http://localhost:3000/api/files/update/${filename}`, {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ SNo, updatedRow }),\n      });\n      setSnackbarMessage(\"Row updated successfully!\");\n      setEditDialogOpen(false);\n      fetchData();\n    } catch (error) {\n      setSnackbarMessage(\"Error updating row\");\n    }\n    setSnackbarOpen(true);\n  };\n\n  const handleChangeRow = (field, value) => {\n    setSelectedRow((prev) => ({ ...prev, [field]: value }));\n  };\n\n  const formatDateTime = (timestamp) => {\n    if (!timestamp || isNaN(new Date(timestamp).getTime())) {\n      return \"Unknown date\";\n    }\n    const date = new Date(timestamp);\n    return new Intl.DateTimeFormat(\"en-US\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n    }).format(date);\n  };\n\n  return (\n    <Container>\n      <Box my={4} textAlign=\"center\">\n        <Typography variant=\"h4\" gutterBottom>\n          Excel Data Upload and Dashboard\n        </Typography>\n\n        {/* File Upload */}\n        <Box display=\"flex\" justifyContent=\"center\" mb={2}>\n          <input\n            accept=\".xlsx,.xls\"\n            type=\"file\"\n            onChange={handleFileChange}\n            style={{ display: \"none\" }}\n            id=\"file-upload\"\n          />\n          <label htmlFor=\"file-upload\">\n            <Button\n              variant=\"contained\"\n              component=\"span\"\n              color=\"primary\"\n              disabled={uploading}\n            >\n              {uploading ? \"Uploading...\" : \"Choose File\"}\n            </Button>\n          </label>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={handleUpload}\n            disabled={!file || uploading}\n            style={{ marginLeft: \"10px\" }}\n          >\n            {uploading ? <CircularProgress size={24} /> : \"Upload\"}\n          </Button>\n        </Box>\n\n        {/* Search Bar */}\n        <Box display=\"flex\" justifyContent=\"center\" mb={4}>\n          <TextField\n            label=\"Search by Filename\"\n            variant=\"outlined\"\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n            fullWidth\n            style={{ maxWidth: 400 }}\n          />\n        </Box>\n\n        {/* Data Table */}\n        {loading ? (\n          <Box display=\"flex\" justifyContent=\"center\">\n            <CircularProgress />\n          </Box>\n        ) : (\n          <Paper elevation={3}>\n            <TableContainer>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Filename</TableCell>\n                    <TableCell>Date Uploaded</TableCell>\n                    <TableCell>Details</TableCell>\n                    <TableCell>Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {data.length === 0 ? (\n                    <Typography>No data available</Typography>\n                  ) : (\n                    data\n                      .slice(\n                        page * rowsPerPage,\n                        page * rowsPerPage + rowsPerPage,\n                      )\n                      .map((file, index) => (\n                        <TableRow key={index}>\n                          <TableCell>{file.filename}</TableCell>\n                          <TableCell>\n                            {formatDateTime(file.timestamp)}\n                          </TableCell>\n                          <TableCell>\n                            {file.data.map((row, rowIndex) => (\n                              <Grid\n                                container\n                                spacing={2}\n                                key={rowIndex}\n                                style={{\n                                  border: \"1px solid #ddd\",\n                                  marginBottom: \"10px\",\n                                  padding: \"10px\",\n                                  borderRadius: \"5px\",\n                                }}\n                              >\n                                <Grid item xs={2}>\n                                  <Typography variant=\"body1\">\n                                    <strong>SNo:</strong> {row.SNo}\n                                  </Typography>\n                                </Grid>\n                                <Grid item xs={2}>\n                                  <Typography variant=\"body1\">\n                                    <strong>Material:</strong> {row.Material}\n                                  </Typography>\n                                </Grid>\n                                <Grid item xs={2}>\n                                  <Typography variant=\"body1\">\n                                    <strong>Unit:</strong> {row.Unit}\n                                  </Typography>\n                                </Grid>\n                                <Grid item xs={2}>\n                                  <Typography variant=\"body1\">\n                                    <strong>Quantity:</strong> {row.Quantity}\n                                  </Typography>\n                                </Grid>\n                                <Grid item xs={2}>\n                                  <Typography variant=\"body1\">\n                                    <strong>Rate:</strong> {row.Rate}\n                                  </Typography>\n                                </Grid>\n                                <Grid item xs={2}>\n                                  <Typography variant=\"body1\">\n                                    <strong>Amount:</strong> {row.Amount}\n                                  </Typography>\n                                </Grid>\n                                <Grid item xs={12}>\n                                  <Button\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    onClick={() => handleUpdate(file, row)}\n                                  >\n                                    Edit\n                                  </Button>\n                                </Grid>\n                              </Grid>\n                            ))}\n                          </TableCell>\n                          <TableCell>\n                            <Button\n                              variant=\"outlined\"\n                              color=\"secondary\"\n                              onClick={() => handleDelete(file.filename)}\n                            >\n                              Delete File\n                            </Button>\n                          </TableCell>\n                        </TableRow>\n                      ))\n                  )}\n                </TableBody>\n              </Table>\n            </TableContainer>\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 25]}\n              component=\"div\"\n              count={data.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onPageChange={(e, newPage) => setPage(newPage)}\n              onRowsPerPageChange={(e) =>\n                setRowsPerPage(parseInt(e.target.value, 10))\n              }\n            />\n          </Paper>\n        )}\n\n        {/* Snackbar for notifications */}\n        <Snackbar\n          open={snackbarOpen}\n          autoHideDuration={6000}\n          onClose={() => setSnackbarOpen(false)}\n          message={snackbarMessage}\n          action={\n            <IconButton\n              size=\"small\"\n              aria-label=\"close\"\n              color=\"inherit\"\n              onClick={() => setSnackbarOpen(false)}\n            >\n              <CloseIcon fontSize=\"small\" />\n            </IconButton>\n          }\n        />\n\n        {/* Edit Dialog */}\n        <Dialog open={editDialogOpen} onClose={() => setEditDialogOpen(false)}>\n          <DialogTitle>Edit Row</DialogTitle>\n          <DialogContent>\n            <TextField\n              label=\"SNo\"\n              fullWidth\n              value={selectedRow?.SNo || \"\"}\n              onChange={(e) => handleChangeRow(\"SNo\", e.target.value)}\n            />\n            <TextField\n              label=\"Material\"\n              fullWidth\n              value={selectedRow?.Material || \"\"}\n              onChange={(e) => handleChangeRow(\"Material\", e.target.value)}\n            />\n            <TextField\n              label=\"Unit\"\n              fullWidth\n              value={selectedRow?.Unit || \"\"}\n              onChange={(e) => handleChangeRow(\"Unit\", e.target.value)}\n            />\n            <TextField\n              label=\"Quantity\"\n              fullWidth\n              value={selectedRow?.Quantity || \"\"}\n              onChange={(e) => handleChangeRow(\"Quantity\", e.target.value)}\n            />\n            <TextField\n              label=\"Rate\"\n              fullWidth\n              value={selectedRow?.Rate || \"\"}\n              onChange={(e) => handleChangeRow(\"Rate\", e.target.value)}\n            />\n            <TextField\n              label=\"Amount\"\n              fullWidth\n              value={selectedRow?.Amount || \"\"}\n              onChange={(e) => handleChangeRow(\"Amount\", e.target.value)}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => setEditDialogOpen(false)} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={handleSaveUpdate} color=\"primary\">\n              Save\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Box>\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}